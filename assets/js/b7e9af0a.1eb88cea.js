"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[6293],{3905:function(e,n,r){r.d(n,{Zo:function(){return u},kt:function(){return m}});var t=r(7294);function o(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function a(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function i(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?a(Object(r),!0).forEach((function(n){o(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function s(e,n){if(null==e)return{};var r,t,o=function(e,n){if(null==e)return{};var r,t,o={},a=Object.keys(e);for(t=0;t<a.length;t++)r=a[t],n.indexOf(r)>=0||(o[r]=e[r]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(t=0;t<a.length;t++)r=a[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l=t.createContext({}),d=function(e){var n=t.useContext(l),r=n;return e&&(r="function"==typeof e?e(n):i(i({},n),e)),r},u=function(e){var n=d(e.components);return t.createElement(l.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},p=t.forwardRef((function(e,n){var r=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=d(r),m=o,f=p["".concat(l,".").concat(m)]||p[m]||c[m]||a;return r?t.createElement(f,i(i({ref:n},u),{},{components:r})):t.createElement(f,i({ref:n},u))}));function m(e,n){var r=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=p;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var d=2;d<a;d++)i[d]=r[d];return t.createElement.apply(null,i)}return t.createElement.apply(null,r)}p.displayName="MDXCreateElement"},3698:function(e,n,r){r.r(n),r.d(n,{assets:function(){return u},contentTitle:function(){return l},default:function(){return m},frontMatter:function(){return s},metadata:function(){return d},toc:function(){return c}});var t=r(7462),o=r(3366),a=(r(7294),r(3905)),i=["components"],s={},l="\u535a\u5ba2\u6dfb\u52a0\u6d41\u7a0b\u56fe",d={unversionedId:"Blog/vuepress-mermaid",id:"Blog/vuepress-mermaid",title:"\u535a\u5ba2\u6dfb\u52a0\u6d41\u7a0b\u56fe",description:"vuepress \u548c docusaurus \u6846\u67b6\u4e0b\u7684\u535a\u5ba2\u5747\u53ef\u4ee5\u81ea\u5df1\u7f16\u5199\u3002",source:"@site/docs/Blog/vuepress-mermaid.md",sourceDirName:"Blog",slug:"/Blog/vuepress-mermaid",permalink:"/Blog/docs/Blog/vuepress-mermaid",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"\u514d\u8d39\u7684\u642d\u5efa\u4e00\u4e2a\u81ea\u5df1\u7684\u535a\u5ba2",permalink:"/Blog/docs/Blog/github-page"},next:{title:"CSS \u76f8\u5173",permalink:"/Blog/docs/category/css-\u76f8\u5173"}},u={},c=[{value:"vuepress",id:"vuepress",level:2},{value:"docusaurus",id:"docusaurus",level:2}],p={toc:c};function m(e){var n=e.components,r=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,t.Z)({},p,r,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"\u535a\u5ba2\u6dfb\u52a0\u6d41\u7a0b\u56fe"},"\u535a\u5ba2\u6dfb\u52a0\u6d41\u7a0b\u56fe"),(0,a.kt)("p",null,"vuepress \u548c docusaurus \u6846\u67b6\u4e0b\u7684\u535a\u5ba2\u5747\u53ef\u4ee5\u81ea\u5df1\u7f16\u5199\u3002"),(0,a.kt)("p",null,"\u5176\u672c\u8d28\u5c31\u662f\u5bf9markdown \u7684\u8bed\u6cd5\u8fdb\u884c\u6269\u5c55"),(0,a.kt)("p",null,"\u8bf4\u4eba\u8bdd\u5c31\u662f\uff1a",(0,a.kt)("strong",{parentName:"p"},"\u5c06md\u4e2d\u7684\u5173\u952e\u5b57\u6293\u5230\u5339\u914d\uff0c\u7136\u540e\u66ff\u6362\u4e0a\u9700\u8981\u7684\u7ec4\u4ef6\u6765\u5b9e\u73b0\u8bed\u6cd5\u6269\u5c55")),(0,a.kt)("h2",{id:"vuepress"},"vuepress"),(0,a.kt)("p",null,"\u9996\u5148\u6ce8\u518c\u4e00\u4e2a\u63d2\u4ef6 "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'const plugins = (options?, ctx?) => {\n  return {\n    name: "vuepress-plugin-mermaidjs",\n    define: {\n      MERMAID_OPTIONS: options,\n    },\n    extendsMarkdown(md) {\n      md.use(require("./markdownItPlugin"));\n    },\n  };\n};\n\nexport default plugins;\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'// markdownItPlugin\n\nconst { hash } = require("@vuepress/utils");\nconst markdownItFence = require("./markdownItFence");\n\nmodule.exports = function mermaidjsPlugin(md) {\n  return markdownItFence(md, "mermaid-fence", {\n    render: (tokens, idx, _options, env, self) => {\n      const token = tokens[idx];\n      const key = `mermaid_${hash(idx)}`;\n      const { content } = token;\n\n      let encoded = encodeURIComponent(content);\n      return `<ClientOnly><Mermaid id="${key}" graph="${encoded}"></Mermaid></ClientOnly>`;\n    },\n    validate: (params) => {\n      return params.trim().split(" ").includes("mermaid");\n    },\n  });\n};\n\n')),(0,a.kt)("p",null,"\u53ef\u4ee5\u770b\u5230\u6211\u4eec\u662f\u901a\u8fc7extendsMarkdown\u4e2d\u4f20\u51fa\u6765\u7684\u53c2\u6570md\u6765\u89e3\u6790\u5728md\u4e2d\u7684\u4e00\u4e9b\u5173\u952e\u5b57\uff0c\u76ee\u524d\u89e3\u6790\u7684\u80af\u5b9a\u662f```mermaid\u6837\u5b57\u6837\u3002"),(0,a.kt)("p",null,"\u7136\u540e\u5c06\u6211\u4eec\u9700\u8981\u7684\u7ec4\u4ef6\u8fd4\u56de\u51fa\u6765\uff0c\u8fd9\u91cc\u6211\u4eec\u9700\u8981\u5f15\u5165mermaid\u6765\u89e3\u6790\u6d41\u7a0b\u56fe\u4e86\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'import { h, ref, watchEffect, reactive, onMounted } from "vue";\nimport Loading from "./Loading";\nimport mermaid from "mermaid";\n\nconst getThemeVariables = (isDarkMode: boolean): Record<string, unknown> => {\n  return {\n    dark: isDarkMode,\n    background: isDarkMode ? "#1e1e1e" : "#fff",\n\n    primaryColor: isDarkMode ? "#389d70" : "#4abf8a",\n    primaryBorderColor: isDarkMode ? "#389d70" : "#4abf8a",\n    primaryTextColor: "#fff",\n\n    secondaryColor: "#f39c12",\n    secondaryBorderColor: isDarkMode ? "#fff" : "#000",\n    secondaryTextColor: isDarkMode ? "#ddd" : "#333",\n\n    tertiaryColor: isDarkMode ? "#22182d" : "#eeeaf3",\n    tertiaryBorderColor: isDarkMode ? "#fff" : "#000",\n    tertiaryTextColor: isDarkMode ? "#ddd" : "#333",\n\n    // note\n    noteBkgColor: isDarkMode ? "#f6d365" : "#fff5ad",\n    noteTextColor: "#242424",\n    noteBorderColor: isDarkMode ? "#f6d365" : "#333",\n\n    lineColor: isDarkMode ? "#d3d3d3" : "#333",\n    textColor: isDarkMode ? "#fff" : "#242424",\n\n    mainBkg: isDarkMode ? "#389d70" : "#4abf8a",\n    errorBkgColor: "#eb4d5d",\n    errorTextColor: "#fff",\n\n    // flowchart\n    nodeBorder: isDarkMode ? "#389d70" : "#4abf8a",\n    nodeTextColor: isDarkMode ? "#fff" : "#242424",\n\n    // sequence\n    signalTextColor: isDarkMode ? "#9e9e9e" : "#242424",\n\n    // class\n    classText: "#fff",\n\n    // state\n    labelColor: "#fff",\n\n    // colors\n    fillType0: isDarkMode ? "#cf1322" : "#f1636e",\n    fillType1: "#f39c12",\n    fillType2: "#2ecc71",\n    fillType3: "#fa541c",\n    fillType4: "#25a55b",\n    fillType5: "#13c2c2",\n    fillType6: "#096dd9",\n    fillType7: "#aa6fe9",\n  };\n};\n\nconst Mermaid = {\n  name: "Mermaid",\n  props: {\n    id: {\n      type: String,\n      required: false,\n      default() {\n        return "diagram_" + Date.now();\n      },\n    },\n    graph: {\n      type: String,\n      required: true,\n    },\n    style: {\n      type: Object,\n      required: false,\n      default() {\n        return {};\n      },\n    },\n  },\n  data() {\n    return {\n      svg: undefined,\n    };\n  },\n\n  setup(props) {\n    const isDarkmode = ref(false);\n    const state = reactive({\n      svg: undefined,\n    });\n    onMounted(() => {\n      const html = document.querySelector("html") as HTMLElement;\n      const getDarkmodeStatus = (): boolean =>\n        html.classList.contains("dark") ||\n        html.getAttribute("data-theme") === "dark";\n      isDarkmode.value = getDarkmodeStatus();\n    });\n\n    watchEffect(() => {\n      if (props.graph) {\n        mermaid.initialize({\n          startOnLoad: true,\n          themeVariables: getThemeVariables(isDarkmode.value),\n          // ...MERMAID_OPTIONS\n        });\n\n        mermaid.render(props.id, decodeURIComponent(props.graph), (svg) => {\n          state.svg = svg;\n        });\n      }\n    });\n\n    return () => {\n      const style = {\n        width: "100%",\n        ...props.style,\n      };\n\n      return state.svg\n        ? h("div", {\n            innerHTML: state.svg,\n            ...style,\n          })\n        : h(Loading);\n    };\n  },\n  components: {\n    Loading,\n  },\n};\n\nexport default Mermaid;\n')),(0,a.kt)("p",null,"\u81f3\u6b64\u57fa\u672c\u6210\u529f\uff0c\u5c06mermaid\u7ec4\u4ef6\u6ce8\u518c\u5728clientAppEnhanceFiles \u4e2d\u5c31\u53ef\u4ee5\u4e86"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'// config.ts\nexport default defineUserConfig({\n//...\n  clientAppEnhanceFiles: path\n    .resolve(__dirname, "clientAppEnhance.ts")\n    .replace(/\\\\/g, "/"),\n})\n\n')),(0,a.kt)("h2",{id:"docusaurus"},"docusaurus"),(0,a.kt)("p",null,"\u5728 docusaurus \u4e2d\u6211\u63a8\u8350\u76f4\u63a5\u4f7f\u7528\u7b2c\u4e09\u65b9\u63d2\u4ef6 ",(0,a.kt)("a",{parentName:"p",href:"https://sjwall.github.io/mdx-mermaid/docs/intro/"},"mdx-mermaid")))}m.isMDXComponent=!0}}]);